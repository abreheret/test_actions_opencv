name: build
on: [push]


jobs:
  Main:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: install CMake  
        # uses: lukka/get-cmake@latest       

# Qt install
      # - name: Install Qt
        # uses: jurplel/install-qt-action@v2

      - name: Install OpenCV (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libopencv-dev

      # - name: Install OpenCV (MacOS)
        # if: matrix.os == 'macos-latest'
        # run: |
          # brew update
          # brew install opencv
      - name: Install OpenCV with Macports
        if: matrix.os == 'macos-latest'
        run: | 
          curl -JOL https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-10.15-Catalina.pkg
          ls -lah ~
          sudo installer -pkg MacPorts-2.7.1-10.15-Catalina.pkg -target ~
          source ~/.bash_profile
          ls -lah ~
          echo $PATH
          sudo port install opencv4
          
      - name: Compile With CMake   
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release
          
  Windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1.4.1     
      
      - name: install CMake  
        uses: lukka/get-cmake@latest          
      
      - name: Install OpenCV (Windows)
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install opencv 

      # - name: print path opencv install
        # run: |
          # dir "C:\tools"
          # dir "C:\tools\opencv"
          # dir "C:\tools\opencv\build"

      - name: Compile With CMake   
        run: |
          mkdir build
          cd build
          cmake -DOpenCV_DIR=C:\tools\opencv\build ..
          cmake --build . --config Release
          
          
# Upload Result
#    - name: upload executable
#      uses: actions/upload-artifact@v2
#      with:
#        name: ${{matrix.os}}
#        path: |
#          ouputnamefile